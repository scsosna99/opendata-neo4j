/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * RouteSequence
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-12T14:08:15.676-06:00")
public class RouteSequence {
  @SerializedName("lineId")
  private String lineId = null;

  @SerializedName("lineName")
  private String lineName = null;

  @SerializedName("direction")
  private String direction = null;

  @SerializedName("isOutboundOnly")
  private Boolean isOutboundOnly = null;

  @SerializedName("mode")
  private String mode = null;

  @SerializedName("lineStrings")
  private List<String> lineStrings = null;

  @SerializedName("stations")
  private List<MatchedStop> stations = null;

  @SerializedName("stopPointSequences")
  private List<StopPointSequence> stopPointSequences = null;

  @SerializedName("orderedLineRoutes")
  private List<OrderedRoute> orderedLineRoutes = null;

  public RouteSequence lineId(String lineId) {
    this.lineId = lineId;
    return this;
  }

   /**
   * Get lineId
   * @return lineId
  **/
  @ApiModelProperty(value = "")
  public String getLineId() {
    return lineId;
  }

  public void setLineId(String lineId) {
    this.lineId = lineId;
  }

  public RouteSequence lineName(String lineName) {
    this.lineName = lineName;
    return this;
  }

   /**
   * Get lineName
   * @return lineName
  **/
  @ApiModelProperty(value = "")
  public String getLineName() {
    return lineName;
  }

  public void setLineName(String lineName) {
    this.lineName = lineName;
  }

  public RouteSequence direction(String direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @ApiModelProperty(value = "")
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }

  public RouteSequence isOutboundOnly(Boolean isOutboundOnly) {
    this.isOutboundOnly = isOutboundOnly;
    return this;
  }

   /**
   * Get isOutboundOnly
   * @return isOutboundOnly
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsOutboundOnly() {
    return isOutboundOnly;
  }

  public void setIsOutboundOnly(Boolean isOutboundOnly) {
    this.isOutboundOnly = isOutboundOnly;
  }

  public RouteSequence mode(String mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @ApiModelProperty(value = "")
  public String getMode() {
    return mode;
  }

  public void setMode(String mode) {
    this.mode = mode;
  }

  public RouteSequence lineStrings(List<String> lineStrings) {
    this.lineStrings = lineStrings;
    return this;
  }

  public RouteSequence addLineStringsItem(String lineStringsItem) {
    if (this.lineStrings == null) {
      this.lineStrings = new ArrayList<String>();
    }
    this.lineStrings.add(lineStringsItem);
    return this;
  }

   /**
   * Get lineStrings
   * @return lineStrings
  **/
  @ApiModelProperty(value = "")
  public List<String> getLineStrings() {
    return lineStrings;
  }

  public void setLineStrings(List<String> lineStrings) {
    this.lineStrings = lineStrings;
  }

  public RouteSequence stations(List<MatchedStop> stations) {
    this.stations = stations;
    return this;
  }

  public RouteSequence addStationsItem(MatchedStop stationsItem) {
    if (this.stations == null) {
      this.stations = new ArrayList<MatchedStop>();
    }
    this.stations.add(stationsItem);
    return this;
  }

   /**
   * Get stations
   * @return stations
  **/
  @ApiModelProperty(value = "")
  public List<MatchedStop> getStations() {
    return stations;
  }

  public void setStations(List<MatchedStop> stations) {
    this.stations = stations;
  }

  public RouteSequence stopPointSequences(List<StopPointSequence> stopPointSequences) {
    this.stopPointSequences = stopPointSequences;
    return this;
  }

  public RouteSequence addStopPointSequencesItem(StopPointSequence stopPointSequencesItem) {
    if (this.stopPointSequences == null) {
      this.stopPointSequences = new ArrayList<StopPointSequence>();
    }
    this.stopPointSequences.add(stopPointSequencesItem);
    return this;
  }

   /**
   * Get stopPointSequences
   * @return stopPointSequences
  **/
  @ApiModelProperty(value = "")
  public List<StopPointSequence> getStopPointSequences() {
    return stopPointSequences;
  }

  public void setStopPointSequences(List<StopPointSequence> stopPointSequences) {
    this.stopPointSequences = stopPointSequences;
  }

  public RouteSequence orderedLineRoutes(List<OrderedRoute> orderedLineRoutes) {
    this.orderedLineRoutes = orderedLineRoutes;
    return this;
  }

  public RouteSequence addOrderedLineRoutesItem(OrderedRoute orderedLineRoutesItem) {
    if (this.orderedLineRoutes == null) {
      this.orderedLineRoutes = new ArrayList<OrderedRoute>();
    }
    this.orderedLineRoutes.add(orderedLineRoutesItem);
    return this;
  }

   /**
   * Get orderedLineRoutes
   * @return orderedLineRoutes
  **/
  @ApiModelProperty(value = "")
  public List<OrderedRoute> getOrderedLineRoutes() {
    return orderedLineRoutes;
  }

  public void setOrderedLineRoutes(List<OrderedRoute> orderedLineRoutes) {
    this.orderedLineRoutes = orderedLineRoutes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteSequence routeSequence = (RouteSequence) o;
    return Objects.equals(this.lineId, routeSequence.lineId) &&
        Objects.equals(this.lineName, routeSequence.lineName) &&
        Objects.equals(this.direction, routeSequence.direction) &&
        Objects.equals(this.isOutboundOnly, routeSequence.isOutboundOnly) &&
        Objects.equals(this.mode, routeSequence.mode) &&
        Objects.equals(this.lineStrings, routeSequence.lineStrings) &&
        Objects.equals(this.stations, routeSequence.stations) &&
        Objects.equals(this.stopPointSequences, routeSequence.stopPointSequences) &&
        Objects.equals(this.orderedLineRoutes, routeSequence.orderedLineRoutes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineId, lineName, direction, isOutboundOnly, mode, lineStrings, stations, stopPointSequences, orderedLineRoutes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteSequence {\n");
    
    sb.append("    lineId: ").append(toIndentedString(lineId)).append("\n");
    sb.append("    lineName: ").append(toIndentedString(lineName)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    isOutboundOnly: ").append(toIndentedString(isOutboundOnly)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    lineStrings: ").append(toIndentedString(lineStrings)).append("\n");
    sb.append("    stations: ").append(toIndentedString(stations)).append("\n");
    sb.append("    stopPointSequences: ").append(toIndentedString(stopPointSequences)).append("\n");
    sb.append("    orderedLineRoutes: ").append(toIndentedString(orderedLineRoutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

