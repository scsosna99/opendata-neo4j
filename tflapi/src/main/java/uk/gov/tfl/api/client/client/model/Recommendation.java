/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * Recommendation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-12T14:08:15.676-06:00")
public class Recommendation {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("rule")
  private Integer rule = null;

  @SerializedName("rank")
  private Integer rank = null;

  @SerializedName("fareType")
  private String fareType = null;

  @SerializedName("product")
  private String product = null;

  @SerializedName("ticketType")
  private String ticketType = null;

  @SerializedName("ticketTime")
  private String ticketTime = null;

  @SerializedName("productType")
  private String productType = null;

  @SerializedName("discountCard")
  private String discountCard = null;

  @SerializedName("zones")
  private String zones = null;

  @SerializedName("cost")
  private String cost = null;

  @SerializedName("priceDescription")
  private String priceDescription = null;

  @SerializedName("priceComparison")
  private String priceComparison = null;

  @SerializedName("recommendedTopUp")
  private String recommendedTopUp = null;

  @SerializedName("notes")
  private List<Message> notes = null;

  @SerializedName("keyFeatures")
  private List<Message> keyFeatures = null;

  @SerializedName("gettingYourTicket")
  private List<Message> gettingYourTicket = null;

  @SerializedName("singleFare")
  private Double singleFare = null;

  public Recommendation id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Recommendation rule(Integer rule) {
    this.rule = rule;
    return this;
  }

   /**
   * Get rule
   * @return rule
  **/
  @ApiModelProperty(value = "")
  public Integer getRule() {
    return rule;
  }

  public void setRule(Integer rule) {
    this.rule = rule;
  }

  public Recommendation rank(Integer rank) {
    this.rank = rank;
    return this;
  }

   /**
   * Get rank
   * @return rank
  **/
  @ApiModelProperty(value = "")
  public Integer getRank() {
    return rank;
  }

  public void setRank(Integer rank) {
    this.rank = rank;
  }

  public Recommendation fareType(String fareType) {
    this.fareType = fareType;
    return this;
  }

   /**
   * Get fareType
   * @return fareType
  **/
  @ApiModelProperty(value = "")
  public String getFareType() {
    return fareType;
  }

  public void setFareType(String fareType) {
    this.fareType = fareType;
  }

  public Recommendation product(String product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @ApiModelProperty(value = "")
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }

  public Recommendation ticketType(String ticketType) {
    this.ticketType = ticketType;
    return this;
  }

   /**
   * Get ticketType
   * @return ticketType
  **/
  @ApiModelProperty(value = "")
  public String getTicketType() {
    return ticketType;
  }

  public void setTicketType(String ticketType) {
    this.ticketType = ticketType;
  }

  public Recommendation ticketTime(String ticketTime) {
    this.ticketTime = ticketTime;
    return this;
  }

   /**
   * Get ticketTime
   * @return ticketTime
  **/
  @ApiModelProperty(value = "")
  public String getTicketTime() {
    return ticketTime;
  }

  public void setTicketTime(String ticketTime) {
    this.ticketTime = ticketTime;
  }

  public Recommendation productType(String productType) {
    this.productType = productType;
    return this;
  }

   /**
   * Get productType
   * @return productType
  **/
  @ApiModelProperty(value = "")
  public String getProductType() {
    return productType;
  }

  public void setProductType(String productType) {
    this.productType = productType;
  }

  public Recommendation discountCard(String discountCard) {
    this.discountCard = discountCard;
    return this;
  }

   /**
   * Get discountCard
   * @return discountCard
  **/
  @ApiModelProperty(value = "")
  public String getDiscountCard() {
    return discountCard;
  }

  public void setDiscountCard(String discountCard) {
    this.discountCard = discountCard;
  }

  public Recommendation zones(String zones) {
    this.zones = zones;
    return this;
  }

   /**
   * Get zones
   * @return zones
  **/
  @ApiModelProperty(value = "")
  public String getZones() {
    return zones;
  }

  public void setZones(String zones) {
    this.zones = zones;
  }

  public Recommendation cost(String cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @ApiModelProperty(value = "")
  public String getCost() {
    return cost;
  }

  public void setCost(String cost) {
    this.cost = cost;
  }

  public Recommendation priceDescription(String priceDescription) {
    this.priceDescription = priceDescription;
    return this;
  }

   /**
   * Get priceDescription
   * @return priceDescription
  **/
  @ApiModelProperty(value = "")
  public String getPriceDescription() {
    return priceDescription;
  }

  public void setPriceDescription(String priceDescription) {
    this.priceDescription = priceDescription;
  }

  public Recommendation priceComparison(String priceComparison) {
    this.priceComparison = priceComparison;
    return this;
  }

   /**
   * Get priceComparison
   * @return priceComparison
  **/
  @ApiModelProperty(value = "")
  public String getPriceComparison() {
    return priceComparison;
  }

  public void setPriceComparison(String priceComparison) {
    this.priceComparison = priceComparison;
  }

  public Recommendation recommendedTopUp(String recommendedTopUp) {
    this.recommendedTopUp = recommendedTopUp;
    return this;
  }

   /**
   * Get recommendedTopUp
   * @return recommendedTopUp
  **/
  @ApiModelProperty(value = "")
  public String getRecommendedTopUp() {
    return recommendedTopUp;
  }

  public void setRecommendedTopUp(String recommendedTopUp) {
    this.recommendedTopUp = recommendedTopUp;
  }

  public Recommendation notes(List<Message> notes) {
    this.notes = notes;
    return this;
  }

  public Recommendation addNotesItem(Message notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<Message>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @ApiModelProperty(value = "")
  public List<Message> getNotes() {
    return notes;
  }

  public void setNotes(List<Message> notes) {
    this.notes = notes;
  }

  public Recommendation keyFeatures(List<Message> keyFeatures) {
    this.keyFeatures = keyFeatures;
    return this;
  }

  public Recommendation addKeyFeaturesItem(Message keyFeaturesItem) {
    if (this.keyFeatures == null) {
      this.keyFeatures = new ArrayList<Message>();
    }
    this.keyFeatures.add(keyFeaturesItem);
    return this;
  }

   /**
   * Get keyFeatures
   * @return keyFeatures
  **/
  @ApiModelProperty(value = "")
  public List<Message> getKeyFeatures() {
    return keyFeatures;
  }

  public void setKeyFeatures(List<Message> keyFeatures) {
    this.keyFeatures = keyFeatures;
  }

  public Recommendation gettingYourTicket(List<Message> gettingYourTicket) {
    this.gettingYourTicket = gettingYourTicket;
    return this;
  }

  public Recommendation addGettingYourTicketItem(Message gettingYourTicketItem) {
    if (this.gettingYourTicket == null) {
      this.gettingYourTicket = new ArrayList<Message>();
    }
    this.gettingYourTicket.add(gettingYourTicketItem);
    return this;
  }

   /**
   * Get gettingYourTicket
   * @return gettingYourTicket
  **/
  @ApiModelProperty(value = "")
  public List<Message> getGettingYourTicket() {
    return gettingYourTicket;
  }

  public void setGettingYourTicket(List<Message> gettingYourTicket) {
    this.gettingYourTicket = gettingYourTicket;
  }

  public Recommendation singleFare(Double singleFare) {
    this.singleFare = singleFare;
    return this;
  }

   /**
   * Get singleFare
   * @return singleFare
  **/
  @ApiModelProperty(value = "")
  public Double getSingleFare() {
    return singleFare;
  }

  public void setSingleFare(Double singleFare) {
    this.singleFare = singleFare;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Recommendation recommendation = (Recommendation) o;
    return Objects.equals(this.id, recommendation.id) &&
        Objects.equals(this.rule, recommendation.rule) &&
        Objects.equals(this.rank, recommendation.rank) &&
        Objects.equals(this.fareType, recommendation.fareType) &&
        Objects.equals(this.product, recommendation.product) &&
        Objects.equals(this.ticketType, recommendation.ticketType) &&
        Objects.equals(this.ticketTime, recommendation.ticketTime) &&
        Objects.equals(this.productType, recommendation.productType) &&
        Objects.equals(this.discountCard, recommendation.discountCard) &&
        Objects.equals(this.zones, recommendation.zones) &&
        Objects.equals(this.cost, recommendation.cost) &&
        Objects.equals(this.priceDescription, recommendation.priceDescription) &&
        Objects.equals(this.priceComparison, recommendation.priceComparison) &&
        Objects.equals(this.recommendedTopUp, recommendation.recommendedTopUp) &&
        Objects.equals(this.notes, recommendation.notes) &&
        Objects.equals(this.keyFeatures, recommendation.keyFeatures) &&
        Objects.equals(this.gettingYourTicket, recommendation.gettingYourTicket) &&
        Objects.equals(this.singleFare, recommendation.singleFare);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, rule, rank, fareType, product, ticketType, ticketTime, productType, discountCard, zones, cost, priceDescription, priceComparison, recommendedTopUp, notes, keyFeatures, gettingYourTicket, singleFare);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Recommendation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rule: ").append(toIndentedString(rule)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("    fareType: ").append(toIndentedString(fareType)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    ticketType: ").append(toIndentedString(ticketType)).append("\n");
    sb.append("    ticketTime: ").append(toIndentedString(ticketTime)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    discountCard: ").append(toIndentedString(discountCard)).append("\n");
    sb.append("    zones: ").append(toIndentedString(zones)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    priceDescription: ").append(toIndentedString(priceDescription)).append("\n");
    sb.append("    priceComparison: ").append(toIndentedString(priceComparison)).append("\n");
    sb.append("    recommendedTopUp: ").append(toIndentedString(recommendedTopUp)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    keyFeatures: ").append(toIndentedString(keyFeatures)).append("\n");
    sb.append("    gettingYourTicket: ").append(toIndentedString(gettingYourTicket)).append("\n");
    sb.append("    singleFare: ").append(toIndentedString(singleFare)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

