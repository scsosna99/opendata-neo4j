/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * SearchCriteria
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-12T14:08:15.676-06:00")
public class SearchCriteria {
  @SerializedName("dateTime")
  private OffsetDateTime dateTime = null;

  /**
   * Gets or Sets dateTimeType
   */
  @JsonAdapter(DateTimeTypeEnum.Adapter.class)
  public enum DateTimeTypeEnum {
    ARRIVING("Arriving"),
    
    DEPARTING("Departing");

    private String value;

    DateTimeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DateTimeTypeEnum fromValue(String text) {
      for (DateTimeTypeEnum b : DateTimeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DateTimeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DateTimeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DateTimeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DateTimeTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("dateTimeType")
  private DateTimeTypeEnum dateTimeType = null;

  @SerializedName("timeAdjustments")
  private TimeAdjustments timeAdjustments = null;

  public SearchCriteria dateTime(OffsetDateTime dateTime) {
    this.dateTime = dateTime;
    return this;
  }

   /**
   * Get dateTime
   * @return dateTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDateTime() {
    return dateTime;
  }

  public void setDateTime(OffsetDateTime dateTime) {
    this.dateTime = dateTime;
  }

  public SearchCriteria dateTimeType(DateTimeTypeEnum dateTimeType) {
    this.dateTimeType = dateTimeType;
    return this;
  }

   /**
   * Get dateTimeType
   * @return dateTimeType
  **/
  @ApiModelProperty(value = "")
  public DateTimeTypeEnum getDateTimeType() {
    return dateTimeType;
  }

  public void setDateTimeType(DateTimeTypeEnum dateTimeType) {
    this.dateTimeType = dateTimeType;
  }

  public SearchCriteria timeAdjustments(TimeAdjustments timeAdjustments) {
    this.timeAdjustments = timeAdjustments;
    return this;
  }

   /**
   * Get timeAdjustments
   * @return timeAdjustments
  **/
  @ApiModelProperty(value = "")
  public TimeAdjustments getTimeAdjustments() {
    return timeAdjustments;
  }

  public void setTimeAdjustments(TimeAdjustments timeAdjustments) {
    this.timeAdjustments = timeAdjustments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchCriteria searchCriteria = (SearchCriteria) o;
    return Objects.equals(this.dateTime, searchCriteria.dateTime) &&
        Objects.equals(this.dateTimeType, searchCriteria.dateTimeType) &&
        Objects.equals(this.timeAdjustments, searchCriteria.timeAdjustments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateTime, dateTimeType, timeAdjustments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchCriteria {\n");
    
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    dateTimeType: ").append(toIndentedString(dateTimeType)).append("\n");
    sb.append("    timeAdjustments: ").append(toIndentedString(timeAdjustments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

