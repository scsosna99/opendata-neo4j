/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * A paged response containing StopPoints
 */
@ApiModel(description = "A paged response containing StopPoints")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-12T14:08:15.676-06:00")
public class StopPointsResponse {
  @SerializedName("centrePoint")
  private List<Double> centrePoint = null;

  @SerializedName("stopPoints")
  private List<StopPoint> stopPoints = null;

  @SerializedName("pageSize")
  private Integer pageSize = null;

  @SerializedName("total")
  private Integer total = null;

  @SerializedName("page")
  private Integer page = null;

  public StopPointsResponse centrePoint(List<Double> centrePoint) {
    this.centrePoint = centrePoint;
    return this;
  }

  public StopPointsResponse addCentrePointItem(Double centrePointItem) {
    if (this.centrePoint == null) {
      this.centrePoint = new ArrayList<Double>();
    }
    this.centrePoint.add(centrePointItem);
    return this;
  }

   /**
   * The centre latitude/longitude of this list of StopPoints
   * @return centrePoint
  **/
  @ApiModelProperty(value = "The centre latitude/longitude of this list of StopPoints")
  public List<Double> getCentrePoint() {
    return centrePoint;
  }

  public void setCentrePoint(List<Double> centrePoint) {
    this.centrePoint = centrePoint;
  }

  public StopPointsResponse stopPoints(List<StopPoint> stopPoints) {
    this.stopPoints = stopPoints;
    return this;
  }

  public StopPointsResponse addStopPointsItem(StopPoint stopPointsItem) {
    if (this.stopPoints == null) {
      this.stopPoints = new ArrayList<StopPoint>();
    }
    this.stopPoints.add(stopPointsItem);
    return this;
  }

   /**
   * Collection of stop points
   * @return stopPoints
  **/
  @ApiModelProperty(value = "Collection of stop points")
  public List<StopPoint> getStopPoints() {
    return stopPoints;
  }

  public void setStopPoints(List<StopPoint> stopPoints) {
    this.stopPoints = stopPoints;
  }

  public StopPointsResponse pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * The maximum size of the page in this response i.e. the maximum number of StopPoints
   * @return pageSize
  **/
  @ApiModelProperty(value = "The maximum size of the page in this response i.e. the maximum number of StopPoints")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public StopPointsResponse total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * The total number of StopPoints available across all pages
   * @return total
  **/
  @ApiModelProperty(value = "The total number of StopPoints available across all pages")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }

  public StopPointsResponse page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * The index of this page
   * @return page
  **/
  @ApiModelProperty(value = "The index of this page")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopPointsResponse stopPointsResponse = (StopPointsResponse) o;
    return Objects.equals(this.centrePoint, stopPointsResponse.centrePoint) &&
        Objects.equals(this.stopPoints, stopPointsResponse.stopPoints) &&
        Objects.equals(this.pageSize, stopPointsResponse.pageSize) &&
        Objects.equals(this.total, stopPointsResponse.total) &&
        Objects.equals(this.page, stopPointsResponse.page);
  }

  @Override
  public int hashCode() {
    return Objects.hash(centrePoint, stopPoints, pageSize, total, page);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopPointsResponse {\n");
    
    sb.append("    centrePoint: ").append(toIndentedString(centrePoint)).append("\n");
    sb.append("    stopPoints: ").append(toIndentedString(stopPoints)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

