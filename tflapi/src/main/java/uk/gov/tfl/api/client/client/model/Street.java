/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * Street
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-12T14:08:15.676-06:00")
public class Street {
  @SerializedName("name")
  private String name = null;

  @SerializedName("closure")
  private String closure = null;

  @SerializedName("directions")
  private String directions = null;

  @SerializedName("segments")
  private List<StreetSegment> segments = null;

  @SerializedName("sourceSystemId")
  private Long sourceSystemId = null;

  @SerializedName("sourceSystemKey")
  private String sourceSystemKey = null;

  public Street name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Street name
   * @return name
  **/
  @ApiModelProperty(value = "Street name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Street closure(String closure) {
    this.closure = closure;
    return this;
  }

   /**
   * Type of road closure. Some example values:              Open &#x3D; road is open, not blocked, not closed, not restricted. It maybe that the disruption has been moved out of the carriageway.              Partial Closure &#x3D; road is partially blocked, closed or restricted.               Full Closure &#x3D; road is fully blocked or closed.
   * @return closure
  **/
  @ApiModelProperty(value = "Type of road closure. Some example values:              Open = road is open, not blocked, not closed, not restricted. It maybe that the disruption has been moved out of the carriageway.              Partial Closure = road is partially blocked, closed or restricted.               Full Closure = road is fully blocked or closed.")
  public String getClosure() {
    return closure;
  }

  public void setClosure(String closure) {
    this.closure = closure;
  }

  public Street directions(String directions) {
    this.directions = directions;
    return this;
  }

   /**
   * The direction of the disruption on the street. Some example values:              All Directions              All Approaches              Clockwise              Anti-Clockwise              Northbound              Eastbound              Southbound              Westbound              Both Directions
   * @return directions
  **/
  @ApiModelProperty(value = "The direction of the disruption on the street. Some example values:              All Directions              All Approaches              Clockwise              Anti-Clockwise              Northbound              Eastbound              Southbound              Westbound              Both Directions")
  public String getDirections() {
    return directions;
  }

  public void setDirections(String directions) {
    this.directions = directions;
  }

  public Street segments(List<StreetSegment> segments) {
    this.segments = segments;
    return this;
  }

  public Street addSegmentsItem(StreetSegment segmentsItem) {
    if (this.segments == null) {
      this.segments = new ArrayList<StreetSegment>();
    }
    this.segments.add(segmentsItem);
    return this;
  }

   /**
   * Geographic description of the sections of this street that are affected.
   * @return segments
  **/
  @ApiModelProperty(value = "Geographic description of the sections of this street that are affected.")
  public List<StreetSegment> getSegments() {
    return segments;
  }

  public void setSegments(List<StreetSegment> segments) {
    this.segments = segments;
  }

  public Street sourceSystemId(Long sourceSystemId) {
    this.sourceSystemId = sourceSystemId;
    return this;
  }

   /**
   * The ID from the source system of the disruption that this street belongs to.
   * @return sourceSystemId
  **/
  @ApiModelProperty(value = "The ID from the source system of the disruption that this street belongs to.")
  public Long getSourceSystemId() {
    return sourceSystemId;
  }

  public void setSourceSystemId(Long sourceSystemId) {
    this.sourceSystemId = sourceSystemId;
  }

  public Street sourceSystemKey(String sourceSystemKey) {
    this.sourceSystemKey = sourceSystemKey;
    return this;
  }

   /**
   * The key of the source system of the disruption that this street belongs to.
   * @return sourceSystemKey
  **/
  @ApiModelProperty(value = "The key of the source system of the disruption that this street belongs to.")
  public String getSourceSystemKey() {
    return sourceSystemKey;
  }

  public void setSourceSystemKey(String sourceSystemKey) {
    this.sourceSystemKey = sourceSystemKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Street street = (Street) o;
    return Objects.equals(this.name, street.name) &&
        Objects.equals(this.closure, street.closure) &&
        Objects.equals(this.directions, street.directions) &&
        Objects.equals(this.segments, street.segments) &&
        Objects.equals(this.sourceSystemId, street.sourceSystemId) &&
        Objects.equals(this.sourceSystemKey, street.sourceSystemKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, closure, directions, segments, sourceSystemId, sourceSystemKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Street {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    closure: ").append(toIndentedString(closure)).append("\n");
    sb.append("    directions: ").append(toIndentedString(directions)).append("\n");
    sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
    sb.append("    sourceSystemId: ").append(toIndentedString(sourceSystemId)).append("\n");
    sb.append("    sourceSystemKey: ").append(toIndentedString(sourceSystemKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

