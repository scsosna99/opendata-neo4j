/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * Place
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-12T14:08:15.676-06:00")
public class Place {
  @SerializedName("id")
  private String id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("commonName")
  private String commonName = null;

  @SerializedName("distance")
  private Double distance = null;

  @SerializedName("placeType")
  private String placeType = null;

  @SerializedName("additionalProperties")
  private List<AdditionalProperties> additionalProperties = null;

  @SerializedName("children")
  private List<Place> children = null;

  @SerializedName("childrenUrls")
  private List<String> childrenUrls = null;

  @SerializedName("lat")
  private Double lat = null;

  @SerializedName("lon")
  private Double lon = null;

  public Place id(String id) {
    this.id = id;
    return this;
  }

   /**
   * A unique identifier.
   * @return id
  **/
  @ApiModelProperty(value = "A unique identifier.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Place url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The unique location of this resource.
   * @return url
  **/
  @ApiModelProperty(value = "The unique location of this resource.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Place commonName(String commonName) {
    this.commonName = commonName;
    return this;
  }

   /**
   * A human readable name.
   * @return commonName
  **/
  @ApiModelProperty(value = "A human readable name.")
  public String getCommonName() {
    return commonName;
  }

  public void setCommonName(String commonName) {
    this.commonName = commonName;
  }

  public Place distance(Double distance) {
    this.distance = distance;
    return this;
  }

   /**
   * The distance of the place from its search point, if this is the result              of a geographical search, otherwise zero.
   * @return distance
  **/
  @ApiModelProperty(value = "The distance of the place from its search point, if this is the result              of a geographical search, otherwise zero.")
  public Double getDistance() {
    return distance;
  }

  public void setDistance(Double distance) {
    this.distance = distance;
  }

  public Place placeType(String placeType) {
    this.placeType = placeType;
    return this;
  }

   /**
   * The type of Place. See /Place/Meta/placeTypes for possible values.
   * @return placeType
  **/
  @ApiModelProperty(value = "The type of Place. See /Place/Meta/placeTypes for possible values.")
  public String getPlaceType() {
    return placeType;
  }

  public void setPlaceType(String placeType) {
    this.placeType = placeType;
  }

  public Place additionalProperties(List<AdditionalProperties> additionalProperties) {
    this.additionalProperties = additionalProperties;
    return this;
  }

  public Place addAdditionalPropertiesItem(AdditionalProperties additionalPropertiesItem) {
    if (this.additionalProperties == null) {
      this.additionalProperties = new ArrayList<AdditionalProperties>();
    }
    this.additionalProperties.add(additionalPropertiesItem);
    return this;
  }

   /**
   * A bag of additional key/value pairs with extra information about this place.
   * @return additionalProperties
  **/
  @ApiModelProperty(value = "A bag of additional key/value pairs with extra information about this place.")
  public List<AdditionalProperties> getAdditionalProperties() {
    return additionalProperties;
  }

  public void setAdditionalProperties(List<AdditionalProperties> additionalProperties) {
    this.additionalProperties = additionalProperties;
  }

  public Place children(List<Place> children) {
    this.children = children;
    return this;
  }

  public Place addChildrenItem(Place childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<Place>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @ApiModelProperty(value = "")
  public List<Place> getChildren() {
    return children;
  }

  public void setChildren(List<Place> children) {
    this.children = children;
  }

  public Place childrenUrls(List<String> childrenUrls) {
    this.childrenUrls = childrenUrls;
    return this;
  }

  public Place addChildrenUrlsItem(String childrenUrlsItem) {
    if (this.childrenUrls == null) {
      this.childrenUrls = new ArrayList<String>();
    }
    this.childrenUrls.add(childrenUrlsItem);
    return this;
  }

   /**
   * Get childrenUrls
   * @return childrenUrls
  **/
  @ApiModelProperty(value = "")
  public List<String> getChildrenUrls() {
    return childrenUrls;
  }

  public void setChildrenUrls(List<String> childrenUrls) {
    this.childrenUrls = childrenUrls;
  }

  public Place lat(Double lat) {
    this.lat = lat;
    return this;
  }

   /**
   * WGS84 latitude of the location.
   * @return lat
  **/
  @ApiModelProperty(value = "WGS84 latitude of the location.")
  public Double getLat() {
    return lat;
  }

  public void setLat(Double lat) {
    this.lat = lat;
  }

  public Place lon(Double lon) {
    this.lon = lon;
    return this;
  }

   /**
   * WGS84 longitude of the location.
   * @return lon
  **/
  @ApiModelProperty(value = "WGS84 longitude of the location.")
  public Double getLon() {
    return lon;
  }

  public void setLon(Double lon) {
    this.lon = lon;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Place place = (Place) o;
    return Objects.equals(this.id, place.id) &&
        Objects.equals(this.url, place.url) &&
        Objects.equals(this.commonName, place.commonName) &&
        Objects.equals(this.distance, place.distance) &&
        Objects.equals(this.placeType, place.placeType) &&
        Objects.equals(this.additionalProperties, place.additionalProperties) &&
        Objects.equals(this.children, place.children) &&
        Objects.equals(this.childrenUrls, place.childrenUrls) &&
        Objects.equals(this.lat, place.lat) &&
        Objects.equals(this.lon, place.lon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, commonName, distance, placeType, additionalProperties, children, childrenUrls, lat, lon);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Place {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    commonName: ").append(toIndentedString(commonName)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    placeType: ").append(toIndentedString(placeType)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    childrenUrls: ").append(toIndentedString(childrenUrls)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

