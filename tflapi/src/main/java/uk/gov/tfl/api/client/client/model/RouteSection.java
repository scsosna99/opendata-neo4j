/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * RouteSection
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-12T14:08:15.676-06:00")
public class RouteSection {
  @SerializedName("id")
  private String id = null;

  @SerializedName("lineId")
  private String lineId = null;

  @SerializedName("routeCode")
  private String routeCode = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("lineString")
  private String lineString = null;

  @SerializedName("direction")
  private String direction = null;

  @SerializedName("originationName")
  private String originationName = null;

  @SerializedName("destinationName")
  private String destinationName = null;

  @SerializedName("validTo")
  private OffsetDateTime validTo = null;

  @SerializedName("validFrom")
  private OffsetDateTime validFrom = null;

  @SerializedName("routeSectionNaptanEntrySequence")
  private List<RouteSectionNaptanEntrySequence> routeSectionNaptanEntrySequence = null;

  public RouteSection id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The Id of the route
   * @return id
  **/
  @ApiModelProperty(value = "The Id of the route")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public RouteSection lineId(String lineId) {
    this.lineId = lineId;
    return this;
  }

   /**
   * The Id of the Line
   * @return lineId
  **/
  @ApiModelProperty(value = "The Id of the Line")
  public String getLineId() {
    return lineId;
  }

  public void setLineId(String lineId) {
    this.lineId = lineId;
  }

  public RouteSection routeCode(String routeCode) {
    this.routeCode = routeCode;
    return this;
  }

   /**
   * The route code
   * @return routeCode
  **/
  @ApiModelProperty(value = "The route code")
  public String getRouteCode() {
    return routeCode;
  }

  public void setRouteCode(String routeCode) {
    this.routeCode = routeCode;
  }

  public RouteSection name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name such as \&quot;72\&quot;
   * @return name
  **/
  @ApiModelProperty(value = "Name such as \"72\"")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RouteSection lineString(String lineString) {
    this.lineString = lineString;
    return this;
  }

   /**
   * The co-ordinates of the route&#39;s path as a geoJSON lineString
   * @return lineString
  **/
  @ApiModelProperty(value = "The co-ordinates of the route's path as a geoJSON lineString")
  public String getLineString() {
    return lineString;
  }

  public void setLineString(String lineString) {
    this.lineString = lineString;
  }

  public RouteSection direction(String direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Inbound or Outbound
   * @return direction
  **/
  @ApiModelProperty(value = "Inbound or Outbound")
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }

  public RouteSection originationName(String originationName) {
    this.originationName = originationName;
    return this;
  }

   /**
   * The name of the Origin StopPoint
   * @return originationName
  **/
  @ApiModelProperty(value = "The name of the Origin StopPoint")
  public String getOriginationName() {
    return originationName;
  }

  public void setOriginationName(String originationName) {
    this.originationName = originationName;
  }

  public RouteSection destinationName(String destinationName) {
    this.destinationName = destinationName;
    return this;
  }

   /**
   * The name of the Destination StopPoint
   * @return destinationName
  **/
  @ApiModelProperty(value = "The name of the Destination StopPoint")
  public String getDestinationName() {
    return destinationName;
  }

  public void setDestinationName(String destinationName) {
    this.destinationName = destinationName;
  }

  public RouteSection validTo(OffsetDateTime validTo) {
    this.validTo = validTo;
    return this;
  }

   /**
   * The DateTime that the Service containing this Route is valid until.
   * @return validTo
  **/
  @ApiModelProperty(value = "The DateTime that the Service containing this Route is valid until.")
  public OffsetDateTime getValidTo() {
    return validTo;
  }

  public void setValidTo(OffsetDateTime validTo) {
    this.validTo = validTo;
  }

  public RouteSection validFrom(OffsetDateTime validFrom) {
    this.validFrom = validFrom;
    return this;
  }

   /**
   * The DateTime that the Service containing this Route is valid from.
   * @return validFrom
  **/
  @ApiModelProperty(value = "The DateTime that the Service containing this Route is valid from.")
  public OffsetDateTime getValidFrom() {
    return validFrom;
  }

  public void setValidFrom(OffsetDateTime validFrom) {
    this.validFrom = validFrom;
  }

  public RouteSection routeSectionNaptanEntrySequence(List<RouteSectionNaptanEntrySequence> routeSectionNaptanEntrySequence) {
    this.routeSectionNaptanEntrySequence = routeSectionNaptanEntrySequence;
    return this;
  }

  public RouteSection addRouteSectionNaptanEntrySequenceItem(RouteSectionNaptanEntrySequence routeSectionNaptanEntrySequenceItem) {
    if (this.routeSectionNaptanEntrySequence == null) {
      this.routeSectionNaptanEntrySequence = new ArrayList<RouteSectionNaptanEntrySequence>();
    }
    this.routeSectionNaptanEntrySequence.add(routeSectionNaptanEntrySequenceItem);
    return this;
  }

   /**
   * Get routeSectionNaptanEntrySequence
   * @return routeSectionNaptanEntrySequence
  **/
  @ApiModelProperty(value = "")
  public List<RouteSectionNaptanEntrySequence> getRouteSectionNaptanEntrySequence() {
    return routeSectionNaptanEntrySequence;
  }

  public void setRouteSectionNaptanEntrySequence(List<RouteSectionNaptanEntrySequence> routeSectionNaptanEntrySequence) {
    this.routeSectionNaptanEntrySequence = routeSectionNaptanEntrySequence;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RouteSection routeSection = (RouteSection) o;
    return Objects.equals(this.id, routeSection.id) &&
        Objects.equals(this.lineId, routeSection.lineId) &&
        Objects.equals(this.routeCode, routeSection.routeCode) &&
        Objects.equals(this.name, routeSection.name) &&
        Objects.equals(this.lineString, routeSection.lineString) &&
        Objects.equals(this.direction, routeSection.direction) &&
        Objects.equals(this.originationName, routeSection.originationName) &&
        Objects.equals(this.destinationName, routeSection.destinationName) &&
        Objects.equals(this.validTo, routeSection.validTo) &&
        Objects.equals(this.validFrom, routeSection.validFrom) &&
        Objects.equals(this.routeSectionNaptanEntrySequence, routeSection.routeSectionNaptanEntrySequence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, lineId, routeCode, name, lineString, direction, originationName, destinationName, validTo, validFrom, routeSectionNaptanEntrySequence);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RouteSection {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lineId: ").append(toIndentedString(lineId)).append("\n");
    sb.append("    routeCode: ").append(toIndentedString(routeCode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    lineString: ").append(toIndentedString(lineString)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    originationName: ").append(toIndentedString(originationName)).append("\n");
    sb.append("    destinationName: ").append(toIndentedString(destinationName)).append("\n");
    sb.append("    validTo: ").append(toIndentedString(validTo)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    routeSectionNaptanEntrySequence: ").append(toIndentedString(routeSectionNaptanEntrySequence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

