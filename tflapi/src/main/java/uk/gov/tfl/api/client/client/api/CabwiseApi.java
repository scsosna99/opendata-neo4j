/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.api;

import uk.gov.tfl.api.client.client.ApiCallback;
import uk.gov.tfl.api.client.client.ApiClient;
import uk.gov.tfl.api.client.client.ApiException;
import uk.gov.tfl.api.client.client.ApiResponse;
import uk.gov.tfl.api.client.client.Configuration;
import uk.gov.tfl.api.client.client.Pair;
import uk.gov.tfl.api.client.client.ProgressRequestBody;
import uk.gov.tfl.api.client.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CabwiseApi {
    private ApiClient apiClient;

    public CabwiseApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CabwiseApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for cabwiseGet
     * @param lat Latitude (required)
     * @param lon Longitude (required)
     * @param optype Operator Type e.g Minicab, Executive, Limousine (optional)
     * @param wc Wheelchair accessible (optional)
     * @param radius The radius of the bounding circle in metres (optional)
     * @param name Trading name of operating company (optional)
     * @param maxResults An optional parameter to limit the number of results return. Default and maximum is 20. (optional)
     * @param legacyFormat Legacy Format (optional)
     * @param forceXml Force Xml (optional)
     * @param twentyFourSevenOnly Twenty Four Seven Only (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call cabwiseGetCall(Double lat, Double lon, String optype, String wc, Double radius, String name, Integer maxResults, Boolean legacyFormat, Boolean forceXml, Boolean twentyFourSevenOnly, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/Cabwise/search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (lat != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lat", lat));
        if (lon != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("lon", lon));
        if (optype != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("optype", optype));
        if (wc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("wc", wc));
        if (radius != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("radius", radius));
        if (name != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("name", name));
        if (maxResults != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maxResults", maxResults));
        if (legacyFormat != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("legacyFormat", legacyFormat));
        if (forceXml != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("forceXml", forceXml));
        if (twentyFourSevenOnly != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("twentyFourSevenOnly", twentyFourSevenOnly));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call cabwiseGetValidateBeforeCall(Double lat, Double lon, String optype, String wc, Double radius, String name, Integer maxResults, Boolean legacyFormat, Boolean forceXml, Boolean twentyFourSevenOnly, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'lat' is set
        if (lat == null) {
            throw new ApiException("Missing the required parameter 'lat' when calling cabwiseGet(Async)");
        }
        
        // verify the required parameter 'lon' is set
        if (lon == null) {
            throw new ApiException("Missing the required parameter 'lon' when calling cabwiseGet(Async)");
        }
        

        com.squareup.okhttp.Call call = cabwiseGetCall(lat, lon, optype, wc, radius, name, maxResults, legacyFormat, forceXml, twentyFourSevenOnly, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Gets taxis and minicabs contact information
     * 
     * @param lat Latitude (required)
     * @param lon Longitude (required)
     * @param optype Operator Type e.g Minicab, Executive, Limousine (optional)
     * @param wc Wheelchair accessible (optional)
     * @param radius The radius of the bounding circle in metres (optional)
     * @param name Trading name of operating company (optional)
     * @param maxResults An optional parameter to limit the number of results return. Default and maximum is 20. (optional)
     * @param legacyFormat Legacy Format (optional)
     * @param forceXml Force Xml (optional)
     * @param twentyFourSevenOnly Twenty Four Seven Only (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Object cabwiseGet(Double lat, Double lon, String optype, String wc, Double radius, String name, Integer maxResults, Boolean legacyFormat, Boolean forceXml, Boolean twentyFourSevenOnly) throws ApiException {
        ApiResponse<Object> resp = cabwiseGetWithHttpInfo(lat, lon, optype, wc, radius, name, maxResults, legacyFormat, forceXml, twentyFourSevenOnly);
        return resp.getData();
    }

    /**
     * Gets taxis and minicabs contact information
     * 
     * @param lat Latitude (required)
     * @param lon Longitude (required)
     * @param optype Operator Type e.g Minicab, Executive, Limousine (optional)
     * @param wc Wheelchair accessible (optional)
     * @param radius The radius of the bounding circle in metres (optional)
     * @param name Trading name of operating company (optional)
     * @param maxResults An optional parameter to limit the number of results return. Default and maximum is 20. (optional)
     * @param legacyFormat Legacy Format (optional)
     * @param forceXml Force Xml (optional)
     * @param twentyFourSevenOnly Twenty Four Seven Only (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Object> cabwiseGetWithHttpInfo(Double lat, Double lon, String optype, String wc, Double radius, String name, Integer maxResults, Boolean legacyFormat, Boolean forceXml, Boolean twentyFourSevenOnly) throws ApiException {
        com.squareup.okhttp.Call call = cabwiseGetValidateBeforeCall(lat, lon, optype, wc, radius, name, maxResults, legacyFormat, forceXml, twentyFourSevenOnly, null, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Gets taxis and minicabs contact information (asynchronously)
     * 
     * @param lat Latitude (required)
     * @param lon Longitude (required)
     * @param optype Operator Type e.g Minicab, Executive, Limousine (optional)
     * @param wc Wheelchair accessible (optional)
     * @param radius The radius of the bounding circle in metres (optional)
     * @param name Trading name of operating company (optional)
     * @param maxResults An optional parameter to limit the number of results return. Default and maximum is 20. (optional)
     * @param legacyFormat Legacy Format (optional)
     * @param forceXml Force Xml (optional)
     * @param twentyFourSevenOnly Twenty Four Seven Only (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call cabwiseGetAsync(Double lat, Double lon, String optype, String wc, Double radius, String name, Integer maxResults, Boolean legacyFormat, Boolean forceXml, Boolean twentyFourSevenOnly, final ApiCallback<Object> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = cabwiseGetValidateBeforeCall(lat, lon, optype, wc, radius, name, maxResults, legacyFormat, forceXml, twentyFourSevenOnly, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
