/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * Period
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-12T14:08:15.676-06:00")
public class Period {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NORMAL("Normal"),
    
    FREQUENCYHOURS("FrequencyHours"),
    
    FREQUENCYMINUTES("FrequencyMinutes"),
    
    UNKNOWN("Unknown");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("fromTime")
  private TwentyFourHourClockTime fromTime = null;

  @SerializedName("toTime")
  private TwentyFourHourClockTime toTime = null;

  @SerializedName("frequency")
  private ServiceFrequency frequency = null;

  public Period type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Period fromTime(TwentyFourHourClockTime fromTime) {
    this.fromTime = fromTime;
    return this;
  }

   /**
   * Get fromTime
   * @return fromTime
  **/
  @ApiModelProperty(value = "")
  public TwentyFourHourClockTime getFromTime() {
    return fromTime;
  }

  public void setFromTime(TwentyFourHourClockTime fromTime) {
    this.fromTime = fromTime;
  }

  public Period toTime(TwentyFourHourClockTime toTime) {
    this.toTime = toTime;
    return this;
  }

   /**
   * Get toTime
   * @return toTime
  **/
  @ApiModelProperty(value = "")
  public TwentyFourHourClockTime getToTime() {
    return toTime;
  }

  public void setToTime(TwentyFourHourClockTime toTime) {
    this.toTime = toTime;
  }

  public Period frequency(ServiceFrequency frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @ApiModelProperty(value = "")
  public ServiceFrequency getFrequency() {
    return frequency;
  }

  public void setFrequency(ServiceFrequency frequency) {
    this.frequency = frequency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Period period = (Period) o;
    return Objects.equals(this.type, period.type) &&
        Objects.equals(this.fromTime, period.fromTime) &&
        Objects.equals(this.toTime, period.toTime) &&
        Objects.equals(this.frequency, period.frequency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, fromTime, toTime, frequency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Period {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    fromTime: ").append(toIndentedString(fromTime)).append("\n");
    sb.append("    toTime: ").append(toIndentedString(toTime)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

