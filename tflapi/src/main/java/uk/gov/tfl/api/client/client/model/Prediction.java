/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

/**
 * DTO to capture the prediction details
 */
@ApiModel(description = "DTO to capture the prediction details")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-12T14:08:15.676-06:00")
public class Prediction {
  @SerializedName("id")
  private String id = null;

  @SerializedName("operationType")
  private Integer operationType = null;

  @SerializedName("vehicleId")
  private String vehicleId = null;

  @SerializedName("naptanId")
  private String naptanId = null;

  @SerializedName("stationName")
  private String stationName = null;

  @SerializedName("lineId")
  private String lineId = null;

  @SerializedName("lineName")
  private String lineName = null;

  @SerializedName("platformName")
  private String platformName = null;

  @SerializedName("direction")
  private String direction = null;

  @SerializedName("bearing")
  private String bearing = null;

  @SerializedName("destinationNaptanId")
  private String destinationNaptanId = null;

  @SerializedName("destinationName")
  private String destinationName = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  @SerializedName("timeToStation")
  private Integer timeToStation = null;

  @SerializedName("currentLocation")
  private String currentLocation = null;

  @SerializedName("towards")
  private String towards = null;

  @SerializedName("expectedArrival")
  private OffsetDateTime expectedArrival = null;

  @SerializedName("timeToLive")
  private OffsetDateTime timeToLive = null;

  @SerializedName("modeName")
  private String modeName = null;

  @SerializedName("timing")
  private PredictionTiming timing = null;

  public Prediction id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The identitier for the prediction
   * @return id
  **/
  @ApiModelProperty(value = "The identitier for the prediction")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Prediction operationType(Integer operationType) {
    this.operationType = operationType;
    return this;
  }

   /**
   * The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)
   * @return operationType
  **/
  @ApiModelProperty(value = "The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)")
  public Integer getOperationType() {
    return operationType;
  }

  public void setOperationType(Integer operationType) {
    this.operationType = operationType;
  }

  public Prediction vehicleId(String vehicleId) {
    this.vehicleId = vehicleId;
    return this;
  }

   /**
   * The actual vehicle in transit (for train modes, the leading car of the rolling set)
   * @return vehicleId
  **/
  @ApiModelProperty(value = "The actual vehicle in transit (for train modes, the leading car of the rolling set)")
  public String getVehicleId() {
    return vehicleId;
  }

  public void setVehicleId(String vehicleId) {
    this.vehicleId = vehicleId;
  }

  public Prediction naptanId(String naptanId) {
    this.naptanId = naptanId;
    return this;
  }

   /**
   * Identifier for the prediction
   * @return naptanId
  **/
  @ApiModelProperty(value = "Identifier for the prediction")
  public String getNaptanId() {
    return naptanId;
  }

  public void setNaptanId(String naptanId) {
    this.naptanId = naptanId;
  }

  public Prediction stationName(String stationName) {
    this.stationName = stationName;
    return this;
  }

   /**
   * Station name
   * @return stationName
  **/
  @ApiModelProperty(value = "Station name")
  public String getStationName() {
    return stationName;
  }

  public void setStationName(String stationName) {
    this.stationName = stationName;
  }

  public Prediction lineId(String lineId) {
    this.lineId = lineId;
    return this;
  }

   /**
   * Unique identifier for the Line
   * @return lineId
  **/
  @ApiModelProperty(value = "Unique identifier for the Line")
  public String getLineId() {
    return lineId;
  }

  public void setLineId(String lineId) {
    this.lineId = lineId;
  }

  public Prediction lineName(String lineName) {
    this.lineName = lineName;
    return this;
  }

   /**
   * Line Name
   * @return lineName
  **/
  @ApiModelProperty(value = "Line Name")
  public String getLineName() {
    return lineName;
  }

  public void setLineName(String lineName) {
    this.lineName = lineName;
  }

  public Prediction platformName(String platformName) {
    this.platformName = platformName;
    return this;
  }

   /**
   * Platform name (for bus, this is the stop letter)
   * @return platformName
  **/
  @ApiModelProperty(value = "Platform name (for bus, this is the stop letter)")
  public String getPlatformName() {
    return platformName;
  }

  public void setPlatformName(String platformName) {
    this.platformName = platformName;
  }

  public Prediction direction(String direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Direction (unified to inbound/outbound)
   * @return direction
  **/
  @ApiModelProperty(value = "Direction (unified to inbound/outbound)")
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }

  public Prediction bearing(String bearing) {
    this.bearing = bearing;
    return this;
  }

   /**
   * Bearing (between 0 to 359)
   * @return bearing
  **/
  @ApiModelProperty(value = "Bearing (between 0 to 359)")
  public String getBearing() {
    return bearing;
  }

  public void setBearing(String bearing) {
    this.bearing = bearing;
  }

  public Prediction destinationNaptanId(String destinationNaptanId) {
    this.destinationNaptanId = destinationNaptanId;
    return this;
  }

   /**
   * Naptan Identifier for the prediction&#39;s destination
   * @return destinationNaptanId
  **/
  @ApiModelProperty(value = "Naptan Identifier for the prediction's destination")
  public String getDestinationNaptanId() {
    return destinationNaptanId;
  }

  public void setDestinationNaptanId(String destinationNaptanId) {
    this.destinationNaptanId = destinationNaptanId;
  }

  public Prediction destinationName(String destinationName) {
    this.destinationName = destinationName;
    return this;
  }

   /**
   * Name of the destination
   * @return destinationName
  **/
  @ApiModelProperty(value = "Name of the destination")
  public String getDestinationName() {
    return destinationName;
  }

  public void setDestinationName(String destinationName) {
    this.destinationName = destinationName;
  }

  public Prediction timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)
   * @return timestamp
  **/
  @ApiModelProperty(value = "Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public Prediction timeToStation(Integer timeToStation) {
    this.timeToStation = timeToStation;
    return this;
  }

   /**
   * Prediction of the Time to station in seconds
   * @return timeToStation
  **/
  @ApiModelProperty(value = "Prediction of the Time to station in seconds")
  public Integer getTimeToStation() {
    return timeToStation;
  }

  public void setTimeToStation(Integer timeToStation) {
    this.timeToStation = timeToStation;
  }

  public Prediction currentLocation(String currentLocation) {
    this.currentLocation = currentLocation;
    return this;
  }

   /**
   * The current location of the vehicle.
   * @return currentLocation
  **/
  @ApiModelProperty(value = "The current location of the vehicle.")
  public String getCurrentLocation() {
    return currentLocation;
  }

  public void setCurrentLocation(String currentLocation) {
    this.currentLocation = currentLocation;
  }

  public Prediction towards(String towards) {
    this.towards = towards;
    return this;
  }

   /**
   * Routing information or other descriptive text about the path of the vehicle towards the destination
   * @return towards
  **/
  @ApiModelProperty(value = "Routing information or other descriptive text about the path of the vehicle towards the destination")
  public String getTowards() {
    return towards;
  }

  public void setTowards(String towards) {
    this.towards = towards;
  }

  public Prediction expectedArrival(OffsetDateTime expectedArrival) {
    this.expectedArrival = expectedArrival;
    return this;
  }

   /**
   * The expected arrival time of the vehicle at the stop/station
   * @return expectedArrival
  **/
  @ApiModelProperty(value = "The expected arrival time of the vehicle at the stop/station")
  public OffsetDateTime getExpectedArrival() {
    return expectedArrival;
  }

  public void setExpectedArrival(OffsetDateTime expectedArrival) {
    this.expectedArrival = expectedArrival;
  }

  public Prediction timeToLive(OffsetDateTime timeToLive) {
    this.timeToLive = timeToLive;
    return this;
  }

   /**
   * The expiry time for the prediction
   * @return timeToLive
  **/
  @ApiModelProperty(value = "The expiry time for the prediction")
  public OffsetDateTime getTimeToLive() {
    return timeToLive;
  }

  public void setTimeToLive(OffsetDateTime timeToLive) {
    this.timeToLive = timeToLive;
  }

  public Prediction modeName(String modeName) {
    this.modeName = modeName;
    return this;
  }

   /**
   * The mode name of the station/line the prediction relates to
   * @return modeName
  **/
  @ApiModelProperty(value = "The mode name of the station/line the prediction relates to")
  public String getModeName() {
    return modeName;
  }

  public void setModeName(String modeName) {
    this.modeName = modeName;
  }

  public Prediction timing(PredictionTiming timing) {
    this.timing = timing;
    return this;
  }

   /**
   * Keep the original timestamp from MongoDb fo debugging purposes
   * @return timing
  **/
  @ApiModelProperty(value = "Keep the original timestamp from MongoDb fo debugging purposes")
  public PredictionTiming getTiming() {
    return timing;
  }

  public void setTiming(PredictionTiming timing) {
    this.timing = timing;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Prediction prediction = (Prediction) o;
    return Objects.equals(this.id, prediction.id) &&
        Objects.equals(this.operationType, prediction.operationType) &&
        Objects.equals(this.vehicleId, prediction.vehicleId) &&
        Objects.equals(this.naptanId, prediction.naptanId) &&
        Objects.equals(this.stationName, prediction.stationName) &&
        Objects.equals(this.lineId, prediction.lineId) &&
        Objects.equals(this.lineName, prediction.lineName) &&
        Objects.equals(this.platformName, prediction.platformName) &&
        Objects.equals(this.direction, prediction.direction) &&
        Objects.equals(this.bearing, prediction.bearing) &&
        Objects.equals(this.destinationNaptanId, prediction.destinationNaptanId) &&
        Objects.equals(this.destinationName, prediction.destinationName) &&
        Objects.equals(this.timestamp, prediction.timestamp) &&
        Objects.equals(this.timeToStation, prediction.timeToStation) &&
        Objects.equals(this.currentLocation, prediction.currentLocation) &&
        Objects.equals(this.towards, prediction.towards) &&
        Objects.equals(this.expectedArrival, prediction.expectedArrival) &&
        Objects.equals(this.timeToLive, prediction.timeToLive) &&
        Objects.equals(this.modeName, prediction.modeName) &&
        Objects.equals(this.timing, prediction.timing);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, operationType, vehicleId, naptanId, stationName, lineId, lineName, platformName, direction, bearing, destinationNaptanId, destinationName, timestamp, timeToStation, currentLocation, towards, expectedArrival, timeToLive, modeName, timing);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Prediction {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
    sb.append("    vehicleId: ").append(toIndentedString(vehicleId)).append("\n");
    sb.append("    naptanId: ").append(toIndentedString(naptanId)).append("\n");
    sb.append("    stationName: ").append(toIndentedString(stationName)).append("\n");
    sb.append("    lineId: ").append(toIndentedString(lineId)).append("\n");
    sb.append("    lineName: ").append(toIndentedString(lineName)).append("\n");
    sb.append("    platformName: ").append(toIndentedString(platformName)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    bearing: ").append(toIndentedString(bearing)).append("\n");
    sb.append("    destinationNaptanId: ").append(toIndentedString(destinationNaptanId)).append("\n");
    sb.append("    destinationName: ").append(toIndentedString(destinationName)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    timeToStation: ").append(toIndentedString(timeToStation)).append("\n");
    sb.append("    currentLocation: ").append(toIndentedString(currentLocation)).append("\n");
    sb.append("    towards: ").append(toIndentedString(towards)).append("\n");
    sb.append("    expectedArrival: ").append(toIndentedString(expectedArrival)).append("\n");
    sb.append("    timeToLive: ").append(toIndentedString(timeToLive)).append("\n");
    sb.append("    modeName: ").append(toIndentedString(modeName)).append("\n");
    sb.append("    timing: ").append(toIndentedString(timing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

