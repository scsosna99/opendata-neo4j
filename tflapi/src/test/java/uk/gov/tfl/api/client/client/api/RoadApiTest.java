/*
 * Transport for London Unified API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package uk.gov.tfl.api.client.client.api;

import uk.gov.tfl.api.client.client.ApiException;
import org.threeten.bp.OffsetDateTime;
import uk.gov.tfl.api.client.client.model.RoadCorridor;
import uk.gov.tfl.api.client.client.model.RoadDisruption;
import uk.gov.tfl.api.client.client.model.StatusSeverity;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for RoadApi
 */
@Ignore
public class RoadApiTest {

    private final RoadApi api = new RoadApi();

    
    /**
     * Gets a list of disrupted streets. If no date filters are provided, current disruptions are returned.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void roadDisruptedStreetsTest() throws ApiException {
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        Object response = api.roadDisruptedStreets(startDate, endDate);

        // TODO: test validations
    }
    
    /**
     * Get active disruptions, filtered by road ids
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void roadDisruptionTest() throws ApiException {
        List<String> ids = null;
        Boolean stripContent = null;
        List<String> severities = null;
        List<String> categories = null;
        Boolean closures = null;
        List<RoadDisruption> response = api.roadDisruption(ids, stripContent, severities, categories, closures);

        // TODO: test validations
    }
    
    /**
     * Gets a list of active disruptions filtered by disruption Ids.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void roadDisruptionByIdTest() throws ApiException {
        List<String> disruptionIds = null;
        Boolean stripContent = null;
        RoadDisruption response = api.roadDisruptionById(disruptionIds, stripContent);

        // TODO: test validations
    }
    
    /**
     * Gets all roads managed by TfL
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void roadGetTest() throws ApiException {
        List<RoadCorridor> response = api.roadGet();

        // TODO: test validations
    }
    
    /**
     * Gets the road with the specified id (e.g. A1)
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void roadGet_0Test() throws ApiException {
        List<String> ids = null;
        List<RoadCorridor> response = api.roadGet_0(ids);

        // TODO: test validations
    }
    
    /**
     * Gets a list of valid RoadDisruption categories
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void roadMetaCategoriesTest() throws ApiException {
        List<String> response = api.roadMetaCategories();

        // TODO: test validations
    }
    
    /**
     * Gets a list of valid RoadDisruption severity codes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void roadMetaSeveritiesTest() throws ApiException {
        List<StatusSeverity> response = api.roadMetaSeverities();

        // TODO: test validations
    }
    
    /**
     * Gets the specified roads with the status aggregated over the date range specified, or now until the end of today if no dates are passed.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void roadStatusTest() throws ApiException {
        List<String> ids = null;
        OffsetDateTime dateRangeNullableStartDate = null;
        OffsetDateTime dateRangeNullableEndDate = null;
        List<RoadCorridor> response = api.roadStatus(ids, dateRangeNullableStartDate, dateRangeNullableEndDate);

        // TODO: test validations
    }
    
}
